//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Tasks = newTasksTable("", "tasks", "")

type tasksTable struct {
	sqlite.Table

	// Columns
	ID          sqlite.ColumnInteger
	Name        sqlite.ColumnString
	Description sqlite.ColumnString
	ParentID    sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type TasksTable struct {
	tasksTable

	EXCLUDED tasksTable
}

// AS creates new TasksTable with assigned alias
func (a TasksTable) AS(alias string) *TasksTable {
	return newTasksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TasksTable with assigned schema name
func (a TasksTable) FromSchema(schemaName string) *TasksTable {
	return newTasksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TasksTable with assigned table prefix
func (a TasksTable) WithPrefix(prefix string) *TasksTable {
	return newTasksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TasksTable with assigned table suffix
func (a TasksTable) WithSuffix(suffix string) *TasksTable {
	return newTasksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTasksTable(schemaName, tableName, alias string) *TasksTable {
	return &TasksTable{
		tasksTable: newTasksTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newTasksTableImpl("", "excluded", ""),
	}
}

func newTasksTableImpl(schemaName, tableName, alias string) tasksTable {
	var (
		IDColumn          = sqlite.IntegerColumn("id")
		NameColumn        = sqlite.StringColumn("name")
		DescriptionColumn = sqlite.StringColumn("description")
		ParentIDColumn    = sqlite.IntegerColumn("parent_id")
		allColumns        = sqlite.ColumnList{IDColumn, NameColumn, DescriptionColumn, ParentIDColumn}
		mutableColumns    = sqlite.ColumnList{NameColumn, DescriptionColumn, ParentIDColumn}
	)

	return tasksTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Name:        NameColumn,
		Description: DescriptionColumn,
		ParentID:    ParentIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
